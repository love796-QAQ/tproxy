#!/usr/sbin/nft -f

define TPROXY_PORT = 12345
define FWMARK = 0x1

table inet sing-box {

    set reserved_ipv4 {
        type ipv4_addr
        flags interval
        auto-merge
        elements = {
            127.0.0.0/8,
            100.64.0.0/10,
            169.254.0.0/16,
            172.16.0.0/12,
            192.0.0.0/24,
            224.0.0.0/4,
            240.0.0.0/4,
            255.255.255.255/32
        }
    }

    set reserved_ipv6 {
        type ipv6_addr
        flags interval
        auto-merge
        elements = {
            ::1,
            fe80::/10,
            ff00::/8
        }
    }

    set lan_ipv4 {
        type ipv4_addr
        flags interval
        auto-merge
        elements = {
            192.168.0.0/16,
            10.0.0.0/8
        }
    }

    set lan_ipv6 {
        type ipv6_addr
        flags interval
        auto-merge
        elements = {
            fc00::/7
        }
    }

    set proxy_clients_v4 {
        type ipv4_addr
        flags interval
        auto-merge
        elements = {
            192.168.20.8,
            192.168.20.18
        }
    }

    set proxy_clients_v6 {
        type ipv6_addr
        flags interval
        auto-merge
        elements = {
            fd05:abcd:1234::100,
            fd05:abcd:1234::101
        }
    }

    chain prerouting_tproxy {
        type filter hook prerouting priority mangle; policy accept;

        # 0. 非白名单 MAC 全部跳过透明代理
        ip saddr != @proxy_clients_v4 return comment "非白名单 IPV4 跳过"

        # 0. IPv6 非白名单设备跳过
        ip6 saddr != @proxy_clients_v6 return comment "非白名单 IPv6 跳过"

        # 1. 劫持 DNS（UDP + TCP）
        meta l4proto { tcp, udp } th dport 53 tproxy to :$TPROXY_PORT meta mark set $FWMARK comment "拦截 DNS"

        # 2. 防止死循环：目标为本机 TPROXY 端口时拒绝
        fib daddr type local meta l4proto { tcp, udp } th dport $TPROXY_PORT reject with icmpx type host-unreachable comment "防止回环"

        # 3. 本机流量绕过
        fib daddr type local accept comment "目标为本机则放行"

        # 4. 跳过保留地址
        ip daddr @reserved_ipv4 accept comment "IPv4 保留地址"
        ip6 daddr @reserved_ipv6 accept comment "IPv6 保留地址"

        # 5. 跳过局域网内部通信
        ip daddr @lan_ipv4 udp dport != 53 return comment "局域网 UDP 非 DNS"
        ip6 daddr @lan_ipv6 udp dport != 53 return comment "局域网 IPv6 UDP 非 DNS"
        meta l4proto tcp ip saddr @lan_ipv4 ip daddr @lan_ipv4 return comment "局域网 TCP IPv4"
        meta l4proto tcp ip6 saddr @lan_ipv6 ip6 daddr @lan_ipv6 return comment "局域网 TCP IPv6"

        # 6. 跳过已标记流量（防止重复处理）
        meta mark 0xff return comment "已标记跳过"

        # 7. 透明 socket 检测
        meta l4proto tcp socket transparent 1 meta mark set $FWMARK accept comment "透明 socket 防死循环"

        # 8. 默认透明代理
        meta l4proto { tcp, udp } tproxy to :$TPROXY_PORT meta mark set $FWMARK accept comment "透明代理其余流量"
    }

    chain output_tproxy {
        type route hook output priority mangle; policy accept;

        # 1. 跳过回环接口
        meta oifname "lo" accept comment "跳过回环"

        # 2. 跳过已标记
        meta mark 0xff return comment "已标记跳过"

        # 3. 标记 DNS
        meta l4proto { tcp, udp } th dport 53 meta mark set $FWMARK comment "标记 DNS"

        # 4. 跳过保留地址
        ip daddr @reserved_ipv4 accept comment "保留 IPv4"
        ip6 daddr @reserved_ipv6 accept comment "保留 IPv6"

        # 5. 跳过本机访问局域网
        ip daddr @lan_ipv4 udp dport != 53 return comment "局域网 UDP"
        ip6 daddr @lan_ipv6 udp dport != 53 return comment "局域网 IPv6 UDP"
        meta l4proto tcp ip daddr @lan_ipv4 return comment "局域网 TCP"
        meta l4proto tcp ip6 daddr @lan_ipv6 return comment "局域网 IPv6 TCP"

        # 6. 标记其余流量
        meta l4proto { tcp, udp } meta mark set $FWMARK comment "标记其余"
    }
}