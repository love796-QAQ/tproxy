#!/usr/sbin/nft -f

flush ruleset

define TPROXY_PORT = 12345
define FWMARK = 0x1

table inet sing-box {

    set reserved_ipv4 {
        type ipv4_addr
        flags interval
        auto-merge
        elements = {
            127.0.0.0/8,
            100.64.0.0/10,
            169.254.0.0/16,
            172.16.0.0/12,
            192.0.0.0/24,
            224.0.0.0/4,
            240.0.0.0/4,
            255.255.255.255/32
        }
    }

    set reserved_ipv6 {
        type ipv6_addr
        flags interval
        auto-merge
        elements = {
            ::1,
            fe80::/10,
            ff00::/8
        }
    }

    set lan_ipv4 {
        type ipv4_addr
        flags interval
        auto-merge
        elements = {
            192.168.0.0/16,
            10.0.0.0/8
        }
    }

    set lan_ipv6 {
        type ipv6_addr
        flags interval
        auto-merge
        elements = {
            fc00::/7
        }
    }

    chain prerouting_tproxy {
        type filter hook prerouting priority mangle; policy accept;

        # 1. 劫持 DNS（UDP + TCP）
        meta l4proto { tcp, udp } th dport 53 tproxy to :$TPROXY_PORT meta mark set $FWMARK comment "拦截 DNS (UDP+TCP)"

        # 2. 拒绝直连 TProxy 本地端口（防止死循环）
        fib daddr type local meta l4proto { tcp, udp } th dport $TPROXY_PORT reject with icmpx type host-unreachable comment "防止回环"

        # 3. 跳过本机流量
        fib daddr type local accept comment "本机目标流量绕过"

        # 4. 跳过保留地址
        ip daddr @reserved_ipv4 accept comment "IPv4 保留地址绕过"
        ip6 daddr @reserved_ipv6 accept comment "IPv6 保留地址绕过"

        # 5. 跳过局域网内部通信（非 DNS 的 UDP、内网 TCP）
        ip daddr @lan_ipv4 udp dport != 53 return comment "局域网 UDP 非 DNS"
        ip6 daddr @lan_ipv6 udp dport != 53 return comment "局域网 IPv6 UDP 非 DNS"
        meta l4proto tcp ip saddr @lan_ipv4 ip daddr @lan_ipv4 return comment "局域网 IPv4 TCP 内部通信"
        meta l4proto tcp ip6 saddr @lan_ipv6 ip6 daddr @lan_ipv6 return comment "局域网 IPv6 TCP 内部通信"

        # 6. 跳过已标记
        meta mark 0xff return comment "已标记流量"

        # 7. 透明 socket 检测
        meta l4proto tcp socket transparent 1 meta mark set $FWMARK accept comment "透明 socket 防死循环"

        # 8. 其余流量透明代理 + 标记
        meta l4proto { tcp, udp } tproxy to :$TPROXY_PORT meta mark set $FWMARK accept comment "其他流量透明代理"
    }

    chain output_tproxy {
        type route hook output priority mangle; policy accept;

        # 1. 跳过 loopback 接口
        meta oifname "lo" accept comment "回环接口跳过"

        # 2. 跳过已标记
        meta mark 0xff return comment "已标记流量"

        # 3. 标记 DNS
        meta l4proto { tcp, udp } th dport 53 meta mark set $FWMARK comment "标记 DNS 流量"

        # 4. 跳过保留地址
        ip daddr @reserved_ipv4 accept comment "IPv4 保留地址绕过"
        ip6 daddr @reserved_ipv6 accept comment "IPv6 保留地址绕过"

        # 5. 跳过本机访问内网服务
        ip daddr @lan_ipv4 udp dport != 53 return comment "跳过本机发往局域网的 UDP"
        ip6 daddr @lan_ipv6 udp dport != 53 return comment "跳过本机发往局域网的 UDP"
        meta l4proto tcp ip daddr @lan_ipv4 return comment "跳过本机发往局域网的 TCP"
        meta l4proto tcp ip6 daddr @lan_ipv6 return comment "跳过本机发往局域网的 TCP"

        # 6. 标记剩余 TCP/UDP 流量
        meta l4proto { tcp, udp } meta mark set $FWMARK comment "标记其他流量"
    }
}
